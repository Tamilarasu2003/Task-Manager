// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Manager
  HR
  Developer
  Tester
  TeamLead
}

model User{
  id Int @id @default(autoincrement())
  name String @unique
  email String @unique
  password String
  role Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasksCreated Task[] @relation("TasksCreated")
  tasksAssigned Task[] @relation("TasksAssigned")
  access    Access   @relation(fields: [role], references: [role], name: "AccessToUsers")
}

model Task{
  id Int @id @default(autoincrement())
  title String
  description String?
  status String @default("pending")
  dueDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy Int
  assignedTo Int

  createdByUser User @relation("TasksCreated", fields: [createdBy], references: [id])
  assignedToUser User @relation("TasksAssigned", fields: [assignedTo], references: [id])
}

model Access {
  id       Int    @id @default(autoincrement())
  role     Role @unique
  create   Boolean
  read     Boolean
  update   Boolean
  delete   Boolean
  isAdmin  Boolean
  users    User[]  @relation("AccessToUsers")
}
